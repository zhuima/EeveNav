---
import AdminLayout from '../../layouts/AdminLayout.astro'
import { ensureDatabaseData } from '../../lib/migration'

// 检查用户是否已登录
const cookies = Astro.cookies
const isAuthenticated = cookies.get('admin_auth')?.value === 'authenticated'

// 如果未登录，重定向到登录页面
if (!isAuthenticated) {
  return Astro.redirect('/login')
}

// 确保数据库有数据
await ensureDatabaseData()
---

<AdminLayout title="分类管理" activeSection="categories">
  <div class="space-y-6">
    <!-- 页面标题 -->
    <div class="flex items-center justify-between">
      <div>
        <h1 class="text-2xl font-bold text-gray-900">分类管理</h1>
        <p class="text-gray-600 mt-1">管理文章分类</p>
      </div>
      <button 
        id="add-category-btn"
        class="inline-flex items-center px-4 py-2 bg-gradient-to-r from-green-600 to-blue-600 text-white text-sm font-semibold rounded-xl hover:from-green-700 hover:to-blue-700 transition-all duration-200 shadow-lg hover:shadow-xl transform hover:-translate-y-0.5"
      >
        <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"></path>
        </svg>
        新增分类
      </button>
    </div>

    <!-- 分类统计 -->
    <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
      <div class="bg-gradient-to-r from-blue-500 to-purple-600 rounded-2xl p-6 text-white">
        <div class="flex items-center">
          <div class="w-12 h-12 bg-white/20 rounded-xl flex items-center justify-center mr-4">
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10"></path>
            </svg>
          </div>
          <div>
            <p class="text-sm font-medium text-white/80">总分类数</p>
            <p class="text-3xl font-bold" id="total-categories">-</p>
          </div>
        </div>
      </div>

      <div class="bg-gradient-to-r from-green-500 to-teal-600 rounded-2xl p-6 text-white">
        <div class="flex items-center">
          <div class="w-12 h-12 bg-white/20 rounded-xl flex items-center justify-center mr-4">
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
            </svg>
          </div>
          <div>
            <p class="text-sm font-medium text-white/80">总文章数</p>
            <p class="text-3xl font-bold" id="total-posts">-</p>
          </div>
        </div>
      </div>

      <div class="bg-gradient-to-r from-orange-500 to-red-600 rounded-2xl p-6 text-white">
        <div class="flex items-center">
          <div class="w-12 h-12 bg-white/20 rounded-xl flex items-center justify-center mr-4">
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 8v8m-4-5v5m-4-2v2m-2 4h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
            </svg>
          </div>
          <div>
            <p class="text-sm font-medium text-white/80">平均文章数</p>
            <p class="text-3xl font-bold" id="avg-posts">-</p>
          </div>
        </div>
      </div>
    </div>

    <!-- 分类列表 -->
    <div class="bg-white rounded-2xl shadow-sm border border-gray-100">
      <div class="p-6 border-b border-gray-100">
        <h2 class="text-lg font-semibold text-gray-900">分类列表</h2>
      </div>
      
      <div class="overflow-hidden">
        <div class="overflow-x-auto">
          <table class="w-full">
            <thead class="bg-gray-50">
              <tr>
                <th class="px-6 py-4 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">分类名称</th>
                <th class="px-6 py-4 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">文章数量</th>
                <th class="px-6 py-4 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">创建时间</th>
                <th class="px-6 py-4 text-right text-xs font-semibold text-gray-600 uppercase tracking-wider">操作</th>
              </tr>
            </thead>
            <tbody id="categories-table" class="bg-white divide-y divide-gray-100">
              <!-- 动态内容 -->
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </div>

  <!-- 添加分类模态框 -->
  <div id="category-modal" class="fixed inset-0 bg-black bg-opacity-50 hidden items-center justify-center z-50 p-4">
    <div class="bg-white rounded-2xl shadow-2xl w-full max-w-md overflow-hidden">
      <div class="p-6 border-b border-gray-200 bg-gradient-to-r from-green-50 to-blue-50">
        <h3 class="text-xl font-bold text-gray-900">添加新分类</h3>
      </div>
      
      <form id="category-form" class="p-6">
        <div class="mb-6">
          <label class="block text-sm font-semibold text-gray-900 mb-2">分类名称 *</label>
          <input 
            type="text" 
            name="categoryName" 
            required 
            class="w-full px-4 py-3 border border-gray-300 rounded-xl focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all"
            placeholder="请输入分类名称"
          />
        </div>
        
        <div class="flex justify-end space-x-4">
          <button 
            type="button" 
            id="cancel-category-btn"
            class="px-6 py-3 text-sm font-semibold text-gray-700 bg-gray-100 hover:bg-gray-200 rounded-xl transition-colors"
          >
            取消
          </button>
          <button 
            type="submit"
            class="px-6 py-3 text-sm font-semibold text-white bg-gradient-to-r from-green-600 to-blue-600 hover:from-green-700 hover:to-blue-700 rounded-xl transition-all shadow-lg hover:shadow-xl transform hover:-translate-y-0.5"
          >
            添加分类
          </button>
        </div>
      </form>
    </div>
  </div>
</AdminLayout>

<script>
// 加载分类数据
async function loadCategories() {
  try {
    const [categoriesRes, postsRes] = await Promise.all([
      fetch('/api/blog?action=categories'),
      fetch('/api/blog?action=posts')
    ])

    if (!categoriesRes.ok || !postsRes.ok) {
      throw new Error('API请求失败')
    }

    const categoriesData = await categoriesRes.json()
    const posts = await postsRes.json()
    
    // 处理API返回的数据结构
    const categoriesArray = categoriesData.categories || (Array.isArray(categoriesData) ? categoriesData : [])
    const postsArray = Array.isArray(posts) ? posts : []

    // 更新统计信息
    document.getElementById('total-categories')!.textContent = categoriesArray.length.toString()
    document.getElementById('total-posts')!.textContent = postsArray.length.toString()
    document.getElementById('avg-posts')!.textContent = categoriesArray.length > 0 ? 
      Math.round(postsArray.length / categoriesArray.length).toString() : '0'

    // 加载分类表格
    loadCategoriesTable(categoriesArray)
  } catch (error) {
    console.error('加载分类失败:', error)
    const tbody = document.getElementById('categories-table')!
    tbody.innerHTML = '<tr><td colspan="4" class="text-center py-4 text-gray-500">加载失败，请刷新页面重试</td></tr>'
  }
}

// 加载分类表格
function loadCategoriesTable(categories: any[]) {
  const tbody = document.getElementById('categories-table')!
  
  if (!Array.isArray(categories) || categories.length === 0) {
    tbody.innerHTML = '<tr><td colspan="4" class="text-center py-4 text-gray-500">暂无分类</td></tr>'
    return
  }
  
  tbody.innerHTML = categories.map((category: any) => `
    <tr>
      <td class="px-6 py-4 whitespace-nowrap">
        <div class="flex items-center">
          <div class="w-8 h-8 bg-gradient-to-r from-blue-500 to-purple-600 rounded-lg flex items-center justify-center mr-3">
            <span class="text-white text-sm font-bold">${(category.name || '').charAt(0).toUpperCase()}</span>
          </div>
          <div class="text-sm font-medium text-gray-900">${category.name || '未知分类'}</div>
        </div>
      </td>
      <td class="px-6 py-4 whitespace-nowrap">
        <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${
          category.count > 0 ? 'bg-green-100 text-green-800' : 'bg-gray-100 text-gray-800'
        }">
          ${category.count || 0} 篇文章
        </span>
      </td>
      <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
        刚刚创建
      </td>
      <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
        <button 
          onclick="window.deleteCategory('${category.name}')"
          class="text-red-600 hover:text-red-900 ${category.count > 0 ? 'opacity-50 cursor-not-allowed' : ''}"
          ${category.count > 0 ? 'disabled title="有文章使用此分类，无法删除"' : ''}
        >
          删除
        </button>
      </td>
    </tr>
  `).join('')
}

// 页面加载时初始化
document.addEventListener('DOMContentLoaded', () => {
  loadCategories()
  
  // 绑定模态框事件
  const modal = document.getElementById('category-modal')!
  const form = document.getElementById('category-form')! as HTMLFormElement
  const addBtn = document.getElementById('add-category-btn')!
  const cancelBtn = document.getElementById('cancel-category-btn')!

  // 关闭模态框函数
  function closeModal() {
    modal.classList.add('hidden')
    modal.classList.remove('flex')
  }

  // 打开模态框函数
  function openModal() {
    modal.classList.remove('hidden')
    modal.classList.add('flex')
  }

  addBtn.addEventListener('click', () => {
    form.reset()
    openModal()
  })

  cancelBtn.addEventListener('click', (e) => {
    e.preventDefault()
    closeModal()
  })

  modal.addEventListener('click', (e) => {
    if (e.target === modal) {
      closeModal()
    }
  })

  document.addEventListener('keydown', (e) => {
    if (e.key === 'Escape' && !modal.classList.contains('hidden')) {
      closeModal()
    }
  })

  // 表单提交 - 实际添加分类
  form.addEventListener('submit', async (e) => {
    e.preventDefault()
    
    const formData = new FormData(form)
    const categoryName = formData.get('categoryName') as string

    if (!categoryName.trim()) {
      alert('分类名称不能为空！')
      return
    }

    try {
      const response = await fetch('/api/blog', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          action: 'add-category',
          data: { categoryName: categoryName.trim() },
        }),
      })

      const result = await response.json()

      if (response.ok) {
        alert('分类添加成功！')
        form.reset()
        closeModal()
        loadCategories() // 重新加载分类列表
      } else {
        alert(`添加失败: ${result.error || '未知错误'}`)
      }
    } catch (error) {
      console.error('添加分类失败:', error)
      alert('添加失败，请重试')
    }
  })

  // 删除分类函数
  window.deleteCategory = async (categoryName: string) => {
    if (!confirm(`确定要删除分类 "${categoryName}" 吗？`)) {
      return
    }

    try {
      const response = await fetch('/api/blog', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          action: 'delete-category',
          data: { categoryName },
        }),
      })

      if (response.ok) {
        loadCategories()
        alert('分类删除成功！')
      } else {
        const error = await response.json()
        alert(`删除失败: ${error.error}`)
      }
    } catch (error) {
      console.error('删除失败:', error)
      alert('删除失败，请重试')
    }
  }
})

// 声明全局函数
declare global {
  interface Window {
    deleteCategory: (categoryName: string) => void
  }
}
</script>