---
import Layout from '@/layouts/Layout.astro'
import PostLayout from '@/layouts/PostLayout.astro'
import { getDate } from '@/utils'
import { getDatabase } from '../../lib/database'

// 使用动态路由参数获取文章
const { slug } = Astro.params;
const db = getDatabase();
const post = db.getPostBySlug(slug);

// 如果文章不存在，返回404
if (!post) {
  return Astro.redirect('/404');
}

// 如果文章有外部链接，则重定向到该链接
if (post.external_url) {
  return Astro.redirect(post.external_url);
}
---

<Layout>
    <PostLayout>
        <article class="px-4">
            <div>
                {
                  post.cover && (
                    <img width={1020} height={510} src={post.cover} alt={post.title} />
                  )
                }
              </div>
              <h2 class="text-2xl mb-8">
                {post.title}
              </h2>
            <div class="flex mb-6 gap-4 text-sm ">
                <span>ibucoin</span>
               <span>{getDate(post.date)}</span>
               <div class="flex gap-2 items-center">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 32 32"><path fill="currentColor" d="M24 4v22.75l-7.1-3.59l-.9-.45l-.9.45L8 26.75V4zm0-2H8a2 2 0 0 0-2 2v26l10-5l10 5V4a2 2 0 0 0-2-2" /></svg>
                {
                  post.tags && (
                    <ul class="flex gap-2">
                      {post.tags.map(tag => (
                        <li>{tag}</li>
                      ))}
                    </ul>
                  )
                }
              </div>
            </div>

            <div class="mt-10 content">
              <!-- 使用文章内容 -->
              <div set:html={post.content} />
            </div>
          </article>
    </PostLayout>
</Layout>

<style is:global>
body {
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    line-height: 1.6;
    color: var(--text-color);
    background-color: var(--background-color);
    margin: 0 auto;
    padding: 20px;
  }

  .content h1, .content h2, .content h3, .content h4, .content h5, .content h6 {
    margin-top: 1.5em;
    margin-bottom: 0.5em;
    font-weight: 600;
    line-height: 1.3;
  }

  .content h1 {
    font-size: 2.5em;
    border-bottom: 2px solid var(--primary-color);
    padding-bottom: 10px;
    color: var(--primary-color);
  }

  .content h2 {
    font-size: 2em;
    color: var(--secondary-color);
  }

  .content h3 {
    font-size: 1.5em;
  }

  .content p {
    margin-bottom: 1.5em;
  }

  .content a {
    color: var(--primary-color);
    text-decoration: none;
    border-bottom: 1px solid transparent;
    transition: border-bottom-color 0.3s ease;
  }

  .content a:hover {
    border-bottom-color: var(--primary-color);
  }

  .content code {
    background-color: var(--code-background);
    padding: 0.2em 0.4em;
    border-radius: 3px;
    font-family: 'Consolas', 'Monaco', 'Andale Mono', 'Ubuntu Mono', monospace;
    font-size: 0.9em;
  }

  .content blockquote {
    border-left: 4px solid var(--blockquote-color);
    color: #555;
    padding: 0.5em 1em;
    margin: 1em 0;
    background-color: #f9f9f9;
    font-style: italic;
  }

  .content img {
    max-width: 100%;
    height: auto;
    border-radius: 5px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  }

  .content table {
    border-collapse: collapse;
    width: 100%;
    margin-bottom: 1.5em;
  }

  .content th, .content td {
    border: 1px solid #e1e4e8;
    padding: 8px 12px;
  }

  .content th {
    background-color: #f6f8fa;
    font-weight: 600;
  }

  .content hr {
    border: 0;
    height: 1px;
    background-color: #e1e4e8;
    margin: 2em 0;
  }

.content code {
  padding: 10px;
}

.content pre {
  @apply !px-0 rounded-lg p-2;
}

.content code {
  @apply text-sm md:text-base !leading-loose;
}

.content pre > code {
  counter-reset: line;
}

.content code[data-theme*=' '],
.content code[data-theme*=' '] span {
  color: var(--shiki-light);
  background-color: var(--shiki-light-bg);
}

.content code[data-line-numbers] {
  counter-reset: line;
}

.content code[data-line-numbers] > [data-line]::before {
  counter-increment: line;
  content: counter(line);
  @apply inline-block w-4 mr-4 text-right text-gray-500;
}
</style>
