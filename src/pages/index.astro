---
import Layout from '../layouts/Layout.astro'
import { getDatabase } from '../lib/database'
import { ensureDatabaseData } from '../lib/migration'

// 确保数据库有数据
await ensureDatabaseData()

const db = getDatabase()
const posts = db.getPosts()
const categories = db.getCategories()
const tags = db.getTags()

// 将 posts 按分类分组
const postsByCategory = posts.reduce((acc, post) => {
  if (!acc[post.category]) {
    acc[post.category] = []
  }
  acc[post.category].push(post)
  return acc
}, {} as Record<string, typeof posts>)
---

<Layout title="EeveNav - 精选资源导航">
  <main class="min-h-screen bg-gradient-to-br from-blue-50 via-white to-purple-50">
    <!-- Hero Section -->
    <section class="w-full px-6 py-12 text-center">
      <div class="max-w-4xl mx-auto">
        <h1 class="text-5xl font-bold bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent mb-6">
          EeveNav
        </h1>
        <p class="text-xl text-gray-600 mb-8 leading-relaxed">
          发现优质资源，提升工作效率。精心整理的工具、文章、教程和灵感合集。
        </p>
        
        <!-- 搜索框 -->
        <div class="relative max-w-2xl mx-auto mb-12">
          <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
            <svg class="h-5 w-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
              <path fill-rule="evenodd" d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z" clip-rule="evenodd" />
            </svg>
          </div>
          <input 
            type="text" 
            id="search-input"
            placeholder="搜索资源、工具、文章..." 
            class="w-full pl-10 pr-4 py-4 text-lg border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent shadow-lg"
          />
        </div>

      </div>
    </section>

    <!-- 分类过滤器 -->
    <section class="w-full px-6 mb-8">
      <div class="flex flex-wrap justify-center gap-2 mb-8">
        <button 
          class="filter-btn active px-4 py-2 rounded-full text-sm font-medium transition-all duration-200 bg-blue-500 text-white"
          data-category="all"
        >
          全部
        </button>
        {categories.map(category => (
          <button 
            class="filter-btn px-4 py-2 rounded-full text-sm font-medium transition-all duration-200 bg-gray-100 text-gray-700 hover:bg-gray-200"
            data-category={category.name}
          >
            {category.name} ({category.count})
          </button>
        ))}
      </div>
    </section>

    <!-- 资源卡片网格 -->
    <section class="w-full px-6 pb-12">
      <div id="resources-grid" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6">
        {posts.map(post => (
          <div 
            class="resource-card bg-white rounded-xl shadow-md hover:shadow-xl transition-all duration-300 transform hover:-translate-y-1 border border-gray-100"
            data-category={post.category}
            data-tags={post.tags.join(',')}
            data-title={post.title.toLowerCase()}
            data-description={post.des.toLowerCase()}
          >
            <div class="p-6">
              <!-- 封面图片 -->
              <div class="mb-4 overflow-hidden rounded-lg">
                <img 
                  src={post.cover} 
                  alt={post.title}
                  class="w-full h-32 object-cover transition-transform duration-300 hover:scale-105"
                  loading="lazy"
                />
              </div>
              
              <!-- 标题和描述 -->
              <h3 class="font-semibold text-gray-900 mb-2 line-clamp-2 text-lg">
                {post.title}
              </h3>
              <p class="text-gray-600 text-sm mb-4 line-clamp-3">
                {post.des}
              </p>
              
              <!-- 标签 -->
              <div class="flex flex-wrap gap-1 mb-4">
                {post.tags.slice(0, 3).map(tag => (
                  <span class="inline-block px-2 py-1 text-xs bg-gray-100 text-gray-600 rounded-full">
                    {tag}
                  </span>
                ))}
                {post.tags.length > 3 && (
                  <span class="inline-block px-2 py-1 text-xs bg-gray-100 text-gray-600 rounded-full">
                    +{post.tags.length - 3}
                  </span>
                )}
              </div>
              
              <!-- 分类标签 -->
              <div class="flex items-center justify-between">
                <span class="inline-block px-3 py-1 text-xs bg-blue-100 text-blue-600 rounded-full font-medium">
                  {post.category}
                </span>
                
                <!-- 链接按钮 -->
                <div class="flex gap-2">
                  {post.external_url && (
                    <a 
                      href={post.external_url}
                      target="_blank"
                      rel="noopener noreferrer"
                      class="inline-flex items-center px-3 py-1 text-xs bg-green-500 text-white rounded-full hover:bg-green-600 transition-colors"
                    >
                      访问
                      <svg class="w-3 h-3 ml-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"></path>
                      </svg>
                    </a>
                  )}
                  <a 
                    href={`/posts/${post.slug}`}
                    class="inline-flex items-center px-3 py-1 text-xs bg-blue-500 text-white rounded-full hover:bg-blue-600 transition-colors"
                  >
                    详情
                  </a>
                </div>
              </div>
            </div>
          </div>
        ))}
      </div>
      
      <!-- 无结果提示 -->
      <div id="no-results" class="hidden text-center py-12">
        <div class="text-gray-400 text-lg mb-4">😔</div>
        <div class="text-gray-600">没有找到匹配的资源</div>
        <div class="text-sm text-gray-500 mt-2">试试其他关键词或分类</div>
      </div>
    </section>
  </main>
</Layout>

<script>
  // 搜索功能
  const searchInput = document.getElementById('search-input') as HTMLInputElement
  const resourceCards = document.querySelectorAll('.resource-card') as NodeListOf<HTMLElement>
  const filterBtns = document.querySelectorAll('.filter-btn') as NodeListOf<HTMLButtonElement>
  const noResults = document.getElementById('no-results') as HTMLElement

  let currentCategory = 'all'

  // 搜索函数
  function searchResources(query: string) {
    const searchTerm = query.toLowerCase().trim()
    let visibleCount = 0

    resourceCards.forEach(card => {
      const title = card.dataset.title || ''
      const description = card.dataset.description || ''
      const tags = card.dataset.tags || ''
      const category = card.dataset.category || ''

      const matchesSearch = !searchTerm || 
        title.includes(searchTerm) || 
        description.includes(searchTerm) || 
        tags.toLowerCase().includes(searchTerm)

      const matchesCategory = currentCategory === 'all' || category === currentCategory

      if (matchesSearch && matchesCategory) {
        card.style.display = 'block'
        visibleCount++
      } else {
        card.style.display = 'none'
      }
    })

    // 显示/隐藏无结果提示
    if (visibleCount === 0) {
      noResults.classList.remove('hidden')
    } else {
      noResults.classList.add('hidden')
    }
  }

  // 分类过滤函数
  function filterByCategory(category: string) {
    currentCategory = category

    // 更新按钮状态
    filterBtns.forEach(btn => {
      btn.classList.remove('active', 'bg-blue-500', 'text-white')
      btn.classList.add('bg-gray-100', 'text-gray-700')
    })

    const activeBtn = document.querySelector(`[data-category="${category}"]`) as HTMLButtonElement
    if (activeBtn) {
      activeBtn.classList.add('active', 'bg-blue-500', 'text-white')
      activeBtn.classList.remove('bg-gray-100', 'text-gray-700')
    }

    // 重新搜索以应用新的分类过滤
    searchResources(searchInput.value)
  }

  // 绑定事件
  searchInput.addEventListener('input', (e) => {
    const target = e.target as HTMLInputElement
    searchResources(target.value)
  })

  filterBtns.forEach(btn => {
    btn.addEventListener('click', () => {
      const category = btn.dataset.category || 'all'
      filterByCategory(category)
    })
  })

  // 添加一些CSS样式
  const style = document.createElement('style')
  style.textContent = `
    .line-clamp-2 {
      display: -webkit-box;
      -webkit-line-clamp: 2;
      -webkit-box-orient: vertical;
      overflow: hidden;
    }
    
    .line-clamp-3 {
      display: -webkit-box;
      -webkit-line-clamp: 3;
      -webkit-box-orient: vertical;
      overflow: hidden;
    }
    
    .filter-btn:hover {
      transform: translateY(-1px);
    }
    
    .resource-card:hover {
      box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
    }
  `
  document.head.appendChild(style)
</script>
</Layout>
