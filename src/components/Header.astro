---
const { pathname } = Astro.url;

const navs = [
  {
    name: '首页',
    href: '/',
    active: pathname === '/'
  },
  {
    name: '博客',
    href: '/blog',
    active: pathname === '/blog' || pathname.startsWith('/blog/')
  },
  {
    name: '关于',
    href: '/about',
    active: pathname === '/about'
  },
  {
    name: '管理',
    href: '/admin',
    active: pathname === '/admin'
  },
];
---

<!-- Apple-style Header with greater height and visual appeal -->
<header class="sticky top-0 z-50 w-full">
  <!-- Background with blur effect -->
  <div class="absolute inset-0 bg-white/80 backdrop-blur-xl border-b border-gray-100/80"></div>
  
  <!-- Content -->
  <div class="relative">
    <div class="max-w-7xl mx-auto px-6 lg:px-8">
      <div class="flex h-20 items-center justify-between">
        <!-- Logo and Brand -->
        <div class="flex items-center">
          <a
            class="flex items-center space-x-3 group transition-all duration-200"
            href="/"
          >
            <!-- Enhanced Logo -->
            <div class="relative">
              <div class="absolute inset-0 bg-gradient-to-br from-blue-500 to-purple-600 rounded-xl blur-sm opacity-20 group-hover:opacity-30 transition-opacity"></div>
              <div class="relative bg-gradient-to-br from-blue-500 to-purple-600 p-2 rounded-xl">
                <svg  
                  xmlns="http://www.w3.org/2000/svg"
                  viewBox="0 0 256 256"
                  class="h-8 w-8 text-white"
                >
                  <rect width="256" height="256" fill="none"></rect>
                  <line
                    x1="208"
                    y1="128"
                    x2="128"
                    y2="208"
                    fill="none"
                    stroke="currentColor"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="16"
                  ></line>
                  <line
                    x1="192"
                    y1="40"
                    x2="40"
                    y2="192"
                    fill="none"
                    stroke="currentColor"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="16"
                  ></line>
                </svg>
              </div>
            </div>
            <!-- Brand Text -->
            <div class="flex flex-col">
              <span class="text-2xl font-bold bg-gradient-to-r from-gray-900 to-gray-700 bg-clip-text text-transparent">EeveNav</span>
              <span class="text-xs text-gray-500 font-medium">精选资源导航</span>
            </div>
          </a>
        </div>

        <!-- Navigation -->
        <nav class="hidden md:flex items-center space-x-1">
          {
            navs.map(nav => (
              <a
                class={`relative px-4 py-2 rounded-full text-sm font-medium transition-all duration-200 ${
                  nav.active 
                    ? 'text-blue-600 bg-blue-50 shadow-sm' 
                    : 'text-gray-700 hover:text-gray-900 hover:bg-gray-50'
                }`}
                href={nav.href}
              >
                {nav.name}
                {nav.active && (
                  <div class="absolute bottom-0 left-1/2 transform -translate-x-1/2 translate-y-1 w-1 h-1 bg-blue-600 rounded-full"></div>
                )}
              </a>
            ))
          }
        </nav>

        <!-- Right Side Actions -->
        <div class="flex items-center space-x-3">
          <!-- Search Icon (for non-home pages) -->
          {pathname !== '/' && (
            <button id="header-search-btn" class="p-2 text-gray-600 hover:text-gray-900 hover:bg-gray-100 rounded-full transition-all duration-200">
              <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                <path fill-rule="evenodd" d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z" clip-rule="evenodd" />
              </svg>
            </button>
          )}
          
          <!-- Mobile Menu Button -->
          <button id="mobile-menu-button" class="md:hidden p-2 text-gray-600 hover:text-gray-900 hover:bg-gray-100 rounded-full transition-all duration-200">
            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <line x1="3" y1="12" x2="21" y2="12"></line>
              <line x1="3" y1="6" x2="21" y2="6"></line>
              <line x1="3" y1="18" x2="21" y2="18"></line>
            </svg>
          </button>
        </div>
      </div>
    </div>
    
    <!-- Mobile Menu -->
    <div id="mobile-menu" class="hidden md:hidden border-t border-gray-100/80">
      <div class="bg-white/90 backdrop-blur-xl">
        <div class="max-w-7xl mx-auto px-6 py-4 space-y-1">
          {
            navs.map(nav => (
              <a
                class={`block py-3 px-4 rounded-xl text-base font-medium transition-all duration-200 ${
                  nav.active 
                    ? 'bg-blue-50 text-blue-600 border-l-4 border-blue-600' 
                    : 'text-gray-700 hover:bg-gray-50'
                }`}
                href={nav.href}
              >{nav.name}</a>
            ))
          }
        </div>
      </div>
    </div>
  </div>
  
  <!-- Global Search Modal -->
  <div id="search-modal" class="hidden fixed inset-0 z-50 overflow-y-auto">
    <div class="flex items-center justify-center min-h-screen px-4 pt-4 pb-20 text-center sm:block sm:p-0">
      <!-- Background overlay -->
      <div class="fixed inset-0 transition-opacity bg-gray-500 bg-opacity-75 backdrop-blur-sm" id="search-overlay"></div>
      
      <!-- Modal content -->
      <div class="inline-block align-bottom bg-white rounded-2xl text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-2xl sm:w-full">
        <!-- Header -->
        <div class="bg-white px-6 pt-6 pb-4">
          <div class="flex items-center justify-between">
            <h3 class="text-lg font-semibold text-gray-900">搜索资源</h3>
            <button id="close-search-modal" class="p-2 text-gray-400 hover:text-gray-600 rounded-full hover:bg-gray-100 transition-colors">
              <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
              </svg>
            </button>
          </div>
          
          <!-- Search input -->
          <div class="mt-4 relative">
            <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
              <svg class="h-5 w-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                <path fill-rule="evenodd" d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z" clip-rule="evenodd" />
              </svg>
            </div>
            <input 
              type="text" 
              id="global-search-input"
              placeholder="搜索资源、文章..." 
              class="w-full pl-10 pr-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent"
              autocomplete="off"
            />
          </div>
        </div>
        
        <!-- Search results -->
        <div id="search-results" class="max-h-96 overflow-y-auto px-6 pb-6">
          <div id="search-loading" class="hidden py-8 text-center">
            <div class="inline-block w-6 h-6 border-2 border-blue-500 border-t-transparent rounded-full animate-spin"></div>
            <p class="mt-2 text-gray-500">搜索中...</p>
          </div>
          
          <div id="search-empty" class="py-8 text-center text-gray-500">
            <svg class="w-12 h-12 mx-auto mb-4 text-gray-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
            </svg>
            <p>开始输入以搜索资源</p>
          </div>
          
          <div id="search-items" class="space-y-3"></div>
        </div>
      </div>
    </div>
  </div>
</header>

<script>
  // 移动端菜单切换
  const mobileMenuButton = document.getElementById('mobile-menu-button');
  const mobileMenu = document.getElementById('mobile-menu');
  
  if (mobileMenuButton && mobileMenu) {
    mobileMenuButton.addEventListener('click', () => {
      mobileMenu.classList.toggle('hidden');
    });
  }

  // 全局搜索功能
  const headerSearchBtn = document.getElementById('header-search-btn');
  const searchModal = document.getElementById('search-modal');
  const searchOverlay = document.getElementById('search-overlay');
  const closeSearchModal = document.getElementById('close-search-modal');
  const globalSearchInput = document.getElementById('global-search-input');
  const searchLoading = document.getElementById('search-loading');
  const searchEmpty = document.getElementById('search-empty');
  const searchItems = document.getElementById('search-items');

  // 打开搜索模态框
  function openSearchModal() {
    if (searchModal) {
      searchModal.classList.remove('hidden');
      setTimeout(() => {
        if (globalSearchInput) {
          globalSearchInput.focus();
        }
      }, 100);
    }
  }

  // 关闭搜索模态框
  function closeSearchModalFunc() {
    if (searchModal) {
      searchModal.classList.add('hidden');
      if (globalSearchInput) {
        globalSearchInput.value = '';
      }
      resetSearchResults();
    }
  }

  // 重置搜索结果
  function resetSearchResults() {
    if (searchLoading) searchLoading.classList.add('hidden');
    if (searchEmpty) searchEmpty.classList.remove('hidden');
    if (searchItems) searchItems.innerHTML = '';
  }

  // 搜索资源
  async function searchResources(query) {
    if (!query.trim()) {
      resetSearchResults();
      return;
    }

    // 显示加载状态
    if (searchLoading) searchLoading.classList.remove('hidden');
    if (searchEmpty) searchEmpty.classList.add('hidden');
    if (searchItems) searchItems.innerHTML = '';

    try {
      // 调用API进行搜索
      const response = await fetch(`/api/blog?search=${encodeURIComponent(query)}`);
      const data = await response.json();
      
      // 隐藏加载状态
      if (searchLoading) searchLoading.classList.add('hidden');

      if (data.success && data.posts && data.posts.length > 0) {
        // 显示搜索结果
        displaySearchResults(data.posts);
      } else {
        // 显示无结果
        if (searchItems) {
          searchItems.innerHTML = `
            <div class="py-8 text-center text-gray-500">
              <svg class="w-12 h-12 mx-auto mb-4 text-gray-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
              </svg>
              <p>没有找到相关资源</p>
              <p class="text-sm mt-1">尝试使用其他关键词</p>
            </div>
          `;
        }
      }
    } catch (error) {
      console.error('Search error:', error);
      if (searchLoading) searchLoading.classList.add('hidden');
      if (searchItems) {
        searchItems.innerHTML = `
          <div class="py-8 text-center text-red-500">
            <p>搜索出错，请稍后重试</p>
          </div>
        `;
      }
    }
  }

  // 显示搜索结果
  function displaySearchResults(posts) {
    if (!searchItems) return;

    const resultsHTML = posts.slice(0, 8).map(post => `
      <div class="p-4 hover:bg-gray-50 rounded-xl transition-colors cursor-pointer" onclick="window.location.href='/posts/${post.slug}'">
        <div class="flex items-start space-x-3">
          <img src="${post.cover}" alt="${post.title}" class="w-12 h-12 object-cover rounded-lg flex-shrink-0">
          <div class="flex-1 min-w-0">
            <h4 class="text-sm font-semibold text-gray-900 truncate">${post.title}</h4>
            <p class="text-xs text-gray-600 mt-1 line-clamp-2">${post.des}</p>
            <div class="flex items-center mt-2 space-x-2">
              <span class="inline-block px-2 py-0.5 text-xs bg-blue-100 text-blue-600 rounded-full">${post.category}</span>
              ${post.external_url ? '<span class="text-xs text-green-600">• 可访问</span>' : ''}
            </div>
          </div>
        </div>
      </div>
    `).join('');

    searchItems.innerHTML = resultsHTML;
  }

  // 防抖函数
  function debounce(func, wait) {
    let timeout;
    return function executedFunction(...args) {
      const later = () => {
        clearTimeout(timeout);
        func(...args);
      };
      clearTimeout(timeout);
      timeout = setTimeout(later, wait);
    };
  }

  // 事件监听器
  if (headerSearchBtn) {
    headerSearchBtn.addEventListener('click', openSearchModal);
  }

  if (closeSearchModal) {
    closeSearchModal.addEventListener('click', closeSearchModalFunc);
  }

  if (searchOverlay) {
    searchOverlay.addEventListener('click', closeSearchModalFunc);
  }

  if (globalSearchInput) {
    const debouncedSearch = debounce(searchResources, 300);
    globalSearchInput.addEventListener('input', (e) => {
      debouncedSearch(e.target.value);
    });

    // ESC键关闭模态框
    globalSearchInput.addEventListener('keydown', (e) => {
      if (e.key === 'Escape') {
        closeSearchModalFunc();
      }
    });
  }

  // 全局键盘快捷键 (⌘+K 或 Ctrl+K)
  document.addEventListener('keydown', (e) => {
    if ((e.metaKey || e.ctrlKey) && e.key === 'k') {
      e.preventDefault();
      openSearchModal();
    }
  });

  // CSS样式
  const searchStyle = document.createElement('style');
  searchStyle.textContent = `
    .line-clamp-2 {
      display: -webkit-box;
      -webkit-line-clamp: 2;
      -webkit-box-orient: vertical;
      overflow: hidden;
    }
  `;
  document.head.appendChild(searchStyle);
</script>
