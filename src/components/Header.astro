---
const { pathname } = Astro.url;

const navs = [
  {
    name: '首页',
    href: '/',
    active: pathname === '/'
  },
  {
    name: '博客',
    href: '/blog',
    active: pathname === '/blog' || pathname.startsWith('/blog/')
  },
  {
    name: '关于',
    href: '/about',
    active: pathname === '/about'
  },
  {
    name: '管理',
    href: '/admin',
    active: pathname === '/admin'
  },
];
---

<!-- Apple-style Header with greater height and visual appeal -->
<header class="sticky top-0 z-50 w-full">
  <!-- Background with blur effect -->
  <div class="absolute inset-0 bg-white/80 dark:bg-slate-900/80 backdrop-blur-xl border-b border-gray-100/80 dark:border-slate-700/80"></div>
  
  <!-- Content -->
  <div class="relative">
    <div class="max-w-7xl mx-auto px-6 lg:px-8">
      <div class="flex h-20 items-center justify-between">
        <!-- Left Side: Logo and Navigation -->
        <div class="flex items-center space-x-8">
          <!-- Logo and Brand -->
          <a
            class="flex items-center space-x-3 group transition-all duration-200"
            href="/"
          >
            <!-- Enhanced Logo -->
            <div class="relative">
              <div class="absolute inset-0 bg-gradient-to-br from-blue-500 to-purple-600 rounded-xl blur-sm opacity-20 group-hover:opacity-30 transition-opacity"></div>
              <div class="relative bg-gradient-to-br from-blue-500 to-purple-600 p-2 rounded-xl">
                <svg  
                  xmlns="http://www.w3.org/2000/svg"
                  viewBox="0 0 256 256"
                  class="h-8 w-8 text-white"
                >
                  <rect width="256" height="256" fill="none"></rect>
                  <line
                    x1="208"
                    y1="128"
                    x2="128"
                    y2="208"
                    fill="none"
                    stroke="currentColor"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="16"
                  ></line>
                  <line
                    x1="192"
                    y1="40"
                    x2="40"
                    y2="192"
                    fill="none"
                    stroke="currentColor"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="16"
                  ></line>
                </svg>
              </div>
            </div>
            <!-- Brand Text -->
            <div class="flex flex-col">
              <span class="text-2xl font-bold bg-gradient-to-r from-gray-900 to-gray-700 dark:from-gray-100 dark:to-gray-300 bg-clip-text text-transparent">EeveNav</span>
              <span class="text-xs text-gray-500 dark:text-gray-400 font-medium">精选资源导航</span>
            </div>
          </a>

          <!-- Navigation -->
          <nav class="hidden lg:flex items-center space-x-1">
            {
              navs.map(nav => (
                <a
                  class={`relative px-4 py-2 rounded-full text-sm font-medium transition-all duration-200 ${
                    nav.active 
                      ? 'text-blue-600 dark:text-blue-400 bg-blue-50 dark:bg-blue-900/30 shadow-sm' 
                      : 'text-gray-700 dark:text-gray-300 hover:text-gray-900 dark:hover:text-gray-100 hover:bg-gray-50 dark:hover:bg-gray-800'
                  }`}
                  href={nav.href}
                >
                  {nav.name}
                  {nav.active && (
                    <div class="absolute bottom-0 left-1/2 transform -translate-x-1/2 translate-y-1 w-1 h-1 bg-blue-600 rounded-full"></div>
                  )}
                </a>
              ))
            }
          </nav>
        </div>

        <!-- Right Side: Search, Submit, Theme, and Actions -->
        <div class="flex items-center space-x-3">
          <!-- Search -->
          <button id="header-search-btn" class="flex items-center space-x-2 px-3 py-2 text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-gray-100 hover:bg-gray-100 dark:hover:bg-gray-800 rounded-full transition-all duration-200 group">
            <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
              <path fill-rule="evenodd" d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z" clip-rule="evenodd" />
            </svg>
            <span class="hidden md:inline text-sm font-medium group-hover:text-gray-900 dark:group-hover:text-gray-100">搜索</span>
            <kbd class="hidden md:inline-flex items-center px-1.5 py-0.5 text-xs font-mono text-gray-400 dark:text-gray-500 bg-gray-100 dark:bg-gray-800 rounded border">⌘K</kbd>
          </button>

          <!-- Submit Site -->
          <a href="/submit" class="flex items-center space-x-2 px-3 py-2 text-gray-600 dark:text-gray-400 hover:text-white hover:bg-gradient-to-r from-blue-500 to-purple-600 rounded-full transition-all duration-200 group">
            <svg class="h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
            </svg>
            <span class="hidden md:inline text-sm font-medium">收录</span>
          </a>

          <!-- Theme Toggle -->
          <button id="theme-toggle" class="p-2 text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-gray-100 hover:bg-gray-100 dark:hover:bg-gray-800 rounded-full transition-all duration-200" title="切换主题">
            <svg class="h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z"></path>
            </svg>
          </button>

          <!-- GitHub -->
          <a href="https://github.com" target="_blank" class="p-2 text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-gray-100 hover:bg-gray-100 dark:hover:bg-gray-800 rounded-full transition-all duration-200" title="GitHub">
            <svg class="h-5 w-5" fill="currentColor" viewBox="0 0 24 24">
              <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
            </svg>
          </a>
          
          <!-- Mobile Menu Button -->
          <button id="mobile-menu-button" class="lg:hidden p-2 text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-gray-100 hover:bg-gray-100 dark:hover:bg-gray-800 rounded-full transition-all duration-200">
            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <line x1="3" y1="12" x2="21" y2="12"></line>
              <line x1="3" y1="6" x2="21" y2="6"></line>
              <line x1="3" y1="18" x2="21" y2="18"></line>
            </svg>
          </button>
        </div>
      </div>
    </div>
    
    <!-- Mobile Menu -->
    <div id="mobile-menu" class="hidden lg:hidden border-t border-gray-100/80">
      <div class="bg-white/90 dark:bg-slate-900/90 backdrop-blur-xl">
        <div class="max-w-7xl mx-auto px-6 py-4 space-y-1">
          <!-- Navigation Links -->
          {
            navs.map(nav => (
              <a
                class={`block py-3 px-4 rounded-xl text-base font-medium transition-all duration-200 ${
                  nav.active 
                    ? 'bg-blue-50 dark:bg-blue-900/30 text-blue-600 dark:text-blue-400 border-l-4 border-blue-600 dark:border-blue-400' 
                    : 'text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-800'
                }`}
                href={nav.href}
              >{nav.name}</a>
            ))
          }
          
          <!-- Mobile Actions -->
          <div class="pt-4 border-t border-gray-100 dark:border-gray-700 mt-4">
            <div class="flex items-center justify-between">
              <span class="text-sm font-medium text-gray-700 dark:text-gray-300">快捷操作</span>
              <div class="flex items-center space-x-2">
                <button id="mobile-theme-toggle" class="p-2 text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-gray-100 hover:bg-gray-100 dark:hover:bg-gray-800 rounded-full transition-all duration-200" title="切换主题">
                  <svg class="h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z"></path>
                  </svg>
                </button>
                <a href="https://github.com" target="_blank" class="p-2 text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-gray-100 hover:bg-gray-100 dark:hover:bg-gray-800 rounded-full transition-all duration-200" title="GitHub">
                  <svg class="h-5 w-5" fill="currentColor" viewBox="0 0 24 24">
                    <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
                  </svg>
                </a>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  
  <!-- Global Search Modal -->
  <div id="search-modal" class="hidden fixed inset-0 z-50 overflow-y-auto">
    <div class="flex items-center justify-center min-h-screen px-4 pt-4 pb-20 text-center sm:block sm:p-0">
      <!-- Background overlay -->
      <div class="fixed inset-0 transition-opacity bg-gray-500 bg-opacity-75 backdrop-blur-sm" id="search-overlay"></div>
      
      <!-- Modal content -->
      <div class="inline-block align-bottom bg-white rounded-2xl text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-2xl sm:w-full">
        <!-- Header -->
        <div class="bg-white px-6 pt-6 pb-4">
          <div class="flex items-center justify-between">
            <h3 class="text-lg font-semibold text-gray-900">搜索资源</h3>
            <button id="close-search-modal" class="p-2 text-gray-400 hover:text-gray-600 rounded-full hover:bg-gray-100 transition-colors">
              <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
              </svg>
            </button>
          </div>
          
          <!-- Search input -->
          <div class="mt-4 relative">
            <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
              <svg class="h-5 w-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                <path fill-rule="evenodd" d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z" clip-rule="evenodd" />
              </svg>
            </div>
            <input 
              type="text" 
              id="global-search-input"
              placeholder="搜索资源、文章..." 
              class="w-full pl-10 pr-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent"
              autocomplete="off"
            />
          </div>
        </div>
        
        <!-- Search results -->
        <div id="search-results" class="max-h-96 overflow-y-auto px-6 pb-6">
          <div id="search-loading" class="hidden py-8 text-center">
            <div class="inline-block w-6 h-6 border-2 border-blue-500 border-t-transparent rounded-full animate-spin"></div>
            <p class="mt-2 text-gray-500">搜索中...</p>
          </div>
          
          <div id="search-empty" class="py-8 text-center text-gray-500">
            <svg class="w-12 h-12 mx-auto mb-4 text-gray-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
            </svg>
            <p>开始输入以搜索资源</p>
          </div>
          
          <div id="search-items" class="space-y-3"></div>
        </div>
      </div>
    </div>
  </div>
</header>

<script>
  // 移动端菜单切换
  const mobileMenuButton = document.getElementById('mobile-menu-button');
  const mobileMenu = document.getElementById('mobile-menu');
  
  if (mobileMenuButton && mobileMenu) {
    mobileMenuButton.addEventListener('click', () => {
      mobileMenu.classList.toggle('hidden');
    });
  }

  // 主题切换功能
  const themeToggle = document.getElementById('theme-toggle');
  const mobileThemeToggle = document.getElementById('mobile-theme-toggle');
  
  // 初始化主题
  function initTheme() {
    const savedTheme = localStorage.getItem('theme');
    const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
    
    if (savedTheme === 'dark' || (!savedTheme && prefersDark)) {
      document.documentElement.classList.add('dark');
      updateThemeIcons(true);
    } else {
      document.documentElement.classList.remove('dark');
      updateThemeIcons(false);
    }
  }
  
  // 更新主题图标
  function updateThemeIcons(isDark: boolean) {
    const icons = [themeToggle, mobileThemeToggle].filter(Boolean);
    icons.forEach(button => {
      if (button) {
        const svg = button.querySelector('svg');
        if (svg) {
          if (isDark) {
            // 太阳图标（浅色模式）
            svg.innerHTML = `<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z"></path>`;
          } else {
            // 月亮图标（深色模式）
            svg.innerHTML = `<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z"></path>`;
          }
        }
      }
    });
  }
  
  // 切换主题
  function toggleTheme() {
    const isDark = document.documentElement.classList.contains('dark');
    
    if (isDark) {
      document.documentElement.classList.remove('dark');
      localStorage.setItem('theme', 'light');
      updateThemeIcons(false);
    } else {
      document.documentElement.classList.add('dark');
      localStorage.setItem('theme', 'dark');
      updateThemeIcons(true);
    }
  }
  
  // 绑定主题切换事件
  [themeToggle, mobileThemeToggle].forEach(button => {
    if (button) {
      button.addEventListener('click', toggleTheme);
    }
  });
  
  // 监听系统主题变化
  window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', (e) => {
    if (!localStorage.getItem('theme')) {
      if (e.matches) {
        document.documentElement.classList.add('dark');
        updateThemeIcons(true);
      } else {
        document.documentElement.classList.remove('dark');
        updateThemeIcons(false);
      }
    }
  });
  
  // 初始化主题
  initTheme();

  // 全局搜索功能
  const headerSearchBtn = document.getElementById('header-search-btn');
  const searchModal = document.getElementById('search-modal');
  const searchOverlay = document.getElementById('search-overlay');
  const closeSearchModal = document.getElementById('close-search-modal');
  const globalSearchInput = document.getElementById('global-search-input') as HTMLInputElement;
  const searchLoading = document.getElementById('search-loading');
  const searchEmpty = document.getElementById('search-empty');
  const searchItems = document.getElementById('search-items');

  // 打开搜索模态框
  function openSearchModal() {
    if (searchModal) {
      searchModal.classList.remove('hidden');
      setTimeout(() => {
        if (globalSearchInput) {
          globalSearchInput.focus();
        }
      }, 100);
    }
  }

  // 关闭搜索模态框
  function closeSearchModalFunc() {
    if (searchModal) {
      searchModal.classList.add('hidden');
      if (globalSearchInput) {
        (globalSearchInput as HTMLInputElement).value = '';
      }
      resetSearchResults();
    }
  }

  // 重置搜索结果
  function resetSearchResults() {
    if (searchLoading) searchLoading.classList.add('hidden');
    if (searchEmpty) searchEmpty.classList.remove('hidden');
    if (searchItems) searchItems.innerHTML = '';
  }

  // 搜索资源
  async function searchResources(query: string) {
    if (!query.trim()) {
      resetSearchResults();
      return;
    }

    // 显示加载状态
    if (searchLoading) searchLoading.classList.remove('hidden');
    if (searchEmpty) searchEmpty.classList.add('hidden');
    if (searchItems) searchItems.innerHTML = '';

    try {
      // 调用API进行搜索
      const response = await fetch(`/api/blog?search=${encodeURIComponent(query)}`);
      const data = await response.json();
      
      // 隐藏加载状态
      if (searchLoading) searchLoading.classList.add('hidden');

      if (data.success && data.posts && data.posts.length > 0) {
        // 显示搜索结果
        displaySearchResults(data.posts);
      } else {
        // 显示无结果
        if (searchItems) {
          searchItems.innerHTML = `
            <div class="py-8 text-center text-gray-500">
              <svg class="w-12 h-12 mx-auto mb-4 text-gray-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
              </svg>
              <p>没有找到相关资源</p>
              <p class="text-sm mt-1">尝试使用其他关键词</p>
            </div>
          `;
        }
      }
    } catch (error) {
      console.error('Search error:', error);
      if (searchLoading) searchLoading.classList.add('hidden');
      if (searchItems) {
        searchItems.innerHTML = `
          <div class="py-8 text-center text-red-500">
            <p>搜索出错，请稍后重试</p>
          </div>
        `;
      }
    }
  }

  // 显示搜索结果
  function displaySearchResults(posts: any[]) {
    if (!searchItems) return;

    const resultsHTML = posts.slice(0, 8).map((post: any) => `
      <div class="p-4 hover:bg-gray-50 rounded-xl transition-colors cursor-pointer" onclick="window.location.href='/posts/${post.slug}'">
        <div class="flex items-start space-x-3">
          <img src="${post.cover}" alt="${post.title}" class="w-12 h-12 object-cover rounded-lg flex-shrink-0">
          <div class="flex-1 min-w-0">
            <h4 class="text-sm font-semibold text-gray-900 truncate">${post.title}</h4>
            <p class="text-xs text-gray-600 mt-1 line-clamp-2">${post.des}</p>
            <div class="flex items-center mt-2 space-x-2">
              <span class="inline-block px-2 py-0.5 text-xs bg-blue-100 text-blue-600 rounded-full">${post.category}</span>
              ${post.external_url ? '<span class="text-xs text-green-600">• 可访问</span>' : ''}
            </div>
          </div>
        </div>
      </div>
    `).join('');

    searchItems.innerHTML = resultsHTML;
  }

  // 防抖函数
  function debounce(func: (...args: any[]) => void, wait: number) {
    let timeout: NodeJS.Timeout | undefined;
    return function executedFunction(...args: any[]) {
      const later = () => {
        clearTimeout(timeout);
        func(...args);
      };
      clearTimeout(timeout);
      timeout = setTimeout(later, wait);
    };
  }

  // 事件监听器
  if (headerSearchBtn) {
    headerSearchBtn.addEventListener('click', openSearchModal);
  }

  if (closeSearchModal) {
    closeSearchModal.addEventListener('click', closeSearchModalFunc);
  }

  if (searchOverlay) {
    searchOverlay.addEventListener('click', closeSearchModalFunc);
  }

  if (globalSearchInput) {
    const debouncedSearch = debounce(searchResources, 300);
    globalSearchInput.addEventListener('input', (e) => {
      debouncedSearch((e.target as HTMLInputElement).value);
    });

    // ESC键关闭模态框
    globalSearchInput.addEventListener('keydown', (e) => {
      if (e.key === 'Escape') {
        closeSearchModalFunc();
      }
    });
  }

  // 全局键盘快捷键 (⌘+K 或 Ctrl+K)
  document.addEventListener('keydown', (e) => {
    if ((e.metaKey || e.ctrlKey) && e.key === 'k') {
      e.preventDefault();
      openSearchModal();
    }
  });

  // CSS样式
  const searchStyle = document.createElement('style');
  searchStyle.textContent = `
    .line-clamp-2 {
      display: -webkit-box;
      -webkit-line-clamp: 2;
      -webkit-box-orient: vertical;
      overflow: hidden;
    }
  `;
  document.head.appendChild(searchStyle);

  // 添加暗色模式样式
  const darkModeStyle = document.createElement('style');
  darkModeStyle.textContent = `
    :root {
      --header-bg: rgba(255, 255, 255, 0.8);
      --header-border: rgba(156, 163, 175, 0.8);
      --text-primary: #374151;
      --text-secondary: #6b7280;
      --text-muted: #9ca3af;
      --hover-bg: #f3f4f6;
      --active-bg: #eff6ff;
      --active-text: #2563eb;
      --mobile-bg: rgba(255, 255, 255, 0.9);
    }

    .dark {
      --header-bg: rgba(15, 23, 42, 0.8);
      --header-border: rgba(51, 65, 85, 0.8);
      --text-primary: #f8fafc;
      --text-secondary: #cbd5e1;
      --text-muted: #94a3b8;
      --hover-bg: #334155;
      --active-bg: rgba(30, 58, 138, 0.3);
      --active-text: #60a5fa;
      --mobile-bg: rgba(15, 23, 42, 0.9);
    }

    /* 应用主题变量到现有类 */
    header .absolute {
      background-color: var(--header-bg) !important;
      border-color: var(--header-border) !important;
    }

    header .text-gray-900,
    header .text-gray-700 {
      color: var(--text-primary) !important;
    }

    header .text-gray-500,
    header .text-gray-600 {
      color: var(--text-secondary) !important;
    }

    header .text-gray-400 {
      color: var(--text-muted) !important;
    }

    header .hover\\:bg-gray-50:hover,
    header .hover\\:bg-gray-100:hover {
      background-color: var(--hover-bg) !important;
    }

    header .hover\\:text-gray-900:hover {
      color: var(--text-primary) !important;
    }

    header .bg-blue-50 {
      background-color: var(--active-bg) !important;
    }

    header .text-blue-600 {
      color: var(--active-text) !important;
    }

    header .bg-white\\/90 {
      background-color: var(--mobile-bg) !important;
    }

    header .bg-gray-100 {
      background-color: var(--hover-bg) !important;
    }

    /* 搜索模态框暗色模式 */
    .dark #search-modal .bg-white {
      background-color: #1e293b !important;
      color: #f8fafc !important;
    }

    .dark #search-modal .text-gray-900 {
      color: #f8fafc !important;
    }

    .dark #search-modal .text-gray-500 {
      color: #94a3b8 !important;
    }

    .dark #search-modal .border-gray-300 {
      border-color: #475569 !important;
    }

    .dark #search-modal .hover\\:bg-gray-50:hover {
      background-color: #334155 !important;
    }
  `;
  document.head.appendChild(darkModeStyle);
</script>
